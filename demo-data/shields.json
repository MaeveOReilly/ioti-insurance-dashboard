{
  "shields": [{
    "shield": {
      "UUID": "6330b4ce-47a0-46c1-91e5-5b0885365a6d",
      "name": "Water Shield",
      "type": "Home",
      "description": "It detects water leakages.",
      "image": "waterShield",
      "canBeDisabled": false,
      "hazardDetectionOnCloud": true,
      "jsCodeMethod": "waterDetectedShield",
      "services": [],
      "shieldHazards": [
        "WaterLeakHazard"
      ],
      "shieldActions": [
        "WaterLeakAction"
      ],
      "sensorType": "leakDetector",
      "potentialClaimAmount": "10",
      "shieldParameters": []
    },
    "jscode": {
      "shieldUUID": "6330b4ce-47a0-46c1-91e5-5b0885365a6d",
      "type": "shield",
      "actions": [
        "pushios"
      ],
      "code": "var waterDetectedShieldSafelet = function(payload) {\n    return (payload.d.states.liquidDetected.value);\n};\n\nvar waterDetectedShieldEntryCondition = function(payload) {\n    return (payload.d && payload.d.states && payload.d.states.liquidDetected);\n};\n\nvar waterDetectedShieldMessage = function(payload) {\n    return (constructMessage(payload, \"waterDetectedShield\", 'DemoHazard', 'Water Leakage Detected'));\n};\n\nvar waterDetectedShield = function(payload) {\n    var shield = getShieldByName(\"waterDetectedShield\");\n    return (commonShield(payload, shield));\n};\n\nregisterShield(40219239, \"waterDetectedShield\", waterDetectedShieldEntryCondition, undefined, waterDetectedShieldSafelet, waterDetectedShieldMessage, 5000);\n"
    }
  }, {
    "shield": {
      "key": "26d203032ece16da2a9aec708e6de92f",
      "UUID": "2114d30a-64d2-4533-9da3-146d1deba49b",
      "name": "Fire Shield",
      "type": "Environmental Measurements",
      "description": "Detects if there is smoke",
      "image": "fireShield",
      "canBeDisabled": false,
      "hazardDetectionOnCloud": true,
      "jsCodeMethod": "smokeShield",
      "services": [],
      "shieldHazards": [
        "SmokeHazard"
      ],
      "shieldActions": [
        "SmokeAction"
      ],
      "sensorType": "leakDetector",
      "potentialClaimAmount": "10",
      "shieldParameters": []
    },
    "jscode": {
      "key": "smokeShield",
      "shieldUUID": "2114d30a-64d2-4533-9da3-146d1deba49b",
      "type": "shield",
      "actions": [
        "pushios"
      ],
      "code": "var SMOKE_SHIELD_NAME = \"smokeShield\";\nvar SMOKE_SHIELD_DELAY = 20000;\nvar SMOKE_SHIELD_UUID = 2;\n\nconsole.log('smokelet registration');\n\nvar smokeSafelet = function(payload) {\n\tconsole.log('smoke ? '+JSON.stringify(payload.cname));\nreturn (payload.cname === 'SMOKE');\n};\n\nvar  smokeEntryCondition = function(payload) {\n\tconsole.log('smoke ?? '+ payload.cname); return (payload.cname === 'SMOKE');\n};\n\nvar smokeMessage = function(payload) {\n\tpayload.extra = payload.extra || {};\n\tpayload.extra.isHandled = false;\n\tpayload.extra.urgent = true;\n\tpayload.extra.locationDesc = \"Office\";\n\tpayload.extra.deviceDesc = \"SmokeSmart Sensor\";\n\n\treturn (constructMessage(payload, SMOKE_SHIELD_UUID, 'SmokeHazard', 'Smoke detected!'));\n};\n\nvar smokeShield = function(payload){\n\tvar shield = getShieldByName(SMOKE_SHIELD_NAME);\n\treturn (commonShield(payload, shield));\n};\n\nregisterShield(SMOKE_SHIELD_UUID, SMOKE_SHIELD_NAME, smokeEntryCondition, undefined, smokeSafelet, smokeMessage, SMOKE_SHIELD_DELAY);\n"
    }
  }, {
    "shield": {
      "UUID": "175747a5-e4ae-444a-9320-0811d2130deb",
      "name": "Crash Shield",
      "type": "Driving Measurements",
      "description": "Detects if there was a crash",
      "image": "crashShield",
      "canBeDisabled": false,
      "hazardDetectionOnCloud": true,
      "jsCodeMethod": "crashShield",
      "services": [],
      "shieldHazards": [
        "CrashHazard"
      ],
      "shieldActions": [
        "send-sms",
        "push-chrome"
      ],
      "sensorType": "crashDetector",
      "potentialClaimAmount": "100",
      "shieldParameters": []
    },
    "jscode": {  "key": "crashShield",
      "shieldUUID": "175747a5-e4ae-444a-9320-0811d2130deb",
      "type": "shield",
      "actions": [
        "push-chrome",
        "send-sms"
      ],
      "code": "var crashMessage;var crashShieldSafelet = function(payload) {    var crash = false;    if (payload.crashStatus === 2 && payload.crashIndex > 2) {        crashMessage = 'normal but might indicate begin of crash';        crash = true;    }    else if (payload.crashStatus === 3 && payload.crashIndex > 40) {        crashMessage = 'medium crash';        crash = true;    } else if (payload.crashStatus === 4 && payload.crashIndex > 50) {        crashMessage = 'massive crash';        crash = true;    } else {        crash = false;    }    return (crash);};var crashShieldEntryCondition = function(payload) {    return (payload.crashIndex && payload.crashStatus && payload.eventType);};var crashShieldMessage = function(payload) {    return (constructMessage(payload, 123, 'DemoHazard', 'Crash Detected, status: ' + crashMessage));};var crashShield = function(payload) {    var shield = getShieldByName(\"crashShield\");    return (commonShield(payload, shield));};registerShield(123, \"crashShield\", crashShieldEntryCondition, undefined, crashShieldSafelet, crashShieldMessage, 5000);"
    }
  }, {
    "shield": {
      "UUID": "792229c8-f41a-4d1a-8acc-9511ee22582a",
      "name": "Air Shield",
      "type": "Environmental Measurements",
      "description": "Detects if CO2 level is lower than ",
      "image": "airShield",
      "canBeDisabled": false,
      "hazardDetectionOnCloud": true,
      "jsCodeMethod": "airShield",
      "services": [],
      "shieldHazards": [
        "AirHazard"
      ],
      "shieldActions": [
        "pushios"
      ],
      "sensorType": "co2Detector",
      "potentialClaimAmount": "100",
      "shieldParameters": []
    },
    "jscode": {
      "key": "airShield",
      "shieldUUID": "175747a5-e4ae-444a-9320-0811d2130deb",
      "type": "shield",
      "actions": [
        "pushios"
      ],
      "code": ""
    }
  }, {
    "shield": {
      "UUID": "6eac52cc-0c1e-4dc1-84b6-820e1a0f34b6",
      "name": "Weather Shield",
      "type": "Environmental Measurements",
      "description": "Detects if there is severe weather",
      "image": "weatherShield",
      "canBeDisabled": false,
      "hazardDetectionOnCloud": true,
      "jsCodeMethod": "weatherShield",
      "services": [],
      "shieldHazards": [
        "WeatherHazard"
      ],
      "shieldActions": [
        "pushios"
      ],
      "sensorType": "weatherService",
      "potentialClaimAmount": "100",
      "shieldParameters": []
    },
    "jscode": {
      "key": "weatherShield",
      "shieldUUID": "6eac52cc-0c1e-4dc1-84b6-820e1a0f34b6",
      "type": "shield",
      "actions": [
        "pushios"
      ],
      "code": ""
    }
  }, {
    "shield": {
      "UUID": "af6f6d96-67c4-4ab7-aa02-414b411f987b",
      "name": "Emergency Shield",
      "type": "Environmental Measurements",
      "description": "Detects if there is a emergency situation",
      "image": "emergencyShield",
      "canBeDisabled": false,
      "hazardDetectionOnCloud": true,
      "jsCodeMethod": "emergencyShield",
      "services": [],
      "shieldHazards": [
        "EmergencyHazard"
      ],
      "shieldActions": [
        "pushios"
      ],
      "sensorType": "emergencyButton",
      "potentialClaimAmount": "100",
      "shieldParameters": []
    },
    "jscode": {
      "key": "emergencyShield",
      "shieldUUID": "af6f6d96-67c4-4ab7-aa02-414b411f987b",
      "type": "shield",
      "actions": [
        "pushios"
      ],
      "code": ""
    }
  }]
}
